// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_WEAPONMODTYPEFB_FBWEAPONMOD_H_
#define FLATBUFFERS_GENERATED_WEAPONMODTYPEFB_FBWEAPONMOD_H_

#include "flatbuffers/flatbuffers.h"

namespace fbWeaponMod {

enum FB_WeaponModType : int8_t {
  FB_WeaponModType_INVALID = 0,
  FB_WeaponModType_CHOKE = 1,
  FB_WeaponModType_BARREL = 2,
  FB_WeaponModType_UNDERBARREL = 3,
  FB_WeaponModType_SCOPE = 4,
  FB_WeaponModType_MAGAZINE = 5,
  FB_WeaponModType_WEIGHT = 6,
  FB_WeaponModType_HANDLE = 7,
  FB_WeaponModType_MIN = FB_WeaponModType_INVALID,
  FB_WeaponModType_MAX = FB_WeaponModType_HANDLE
};

inline const FB_WeaponModType (&EnumValuesFB_WeaponModType())[8] {
  static const FB_WeaponModType values[] = {
    FB_WeaponModType_INVALID,
    FB_WeaponModType_CHOKE,
    FB_WeaponModType_BARREL,
    FB_WeaponModType_UNDERBARREL,
    FB_WeaponModType_SCOPE,
    FB_WeaponModType_MAGAZINE,
    FB_WeaponModType_WEIGHT,
    FB_WeaponModType_HANDLE
  };
  return values;
}

inline const char * const *EnumNamesFB_WeaponModType() {
  static const char * const names[9] = {
    "INVALID",
    "CHOKE",
    "BARREL",
    "UNDERBARREL",
    "SCOPE",
    "MAGAZINE",
    "WEIGHT",
    "HANDLE",
    nullptr
  };
  return names;
}

inline const char *EnumNameFB_WeaponModType(FB_WeaponModType e) {
  if (flatbuffers::IsOutRange(e, FB_WeaponModType_INVALID, FB_WeaponModType_HANDLE)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesFB_WeaponModType()[index];
}

}  // namespace fbWeaponMod

#endif  // FLATBUFFERS_GENERATED_WEAPONMODTYPEFB_FBWEAPONMOD_H_
