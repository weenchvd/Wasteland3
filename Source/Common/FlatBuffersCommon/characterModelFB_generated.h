// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_CHARACTERMODELFB_FBCHARACTER_H_
#define FLATBUFFERS_GENERATED_CHARACTERMODELFB_FBCHARACTER_H_

#include "flatbuffers/flatbuffers.h"

namespace fbCharacter {

enum FB_CharacterModel : int16_t {
  FB_CharacterModel_INVALID = 0,
  FB_CharacterModel_RANGER_TEMPLATE = 1,
  FB_CharacterModel_COMPANION_SPIKE = 2,
  FB_CharacterModel_MIN = FB_CharacterModel_INVALID,
  FB_CharacterModel_MAX = FB_CharacterModel_COMPANION_SPIKE
};

inline const FB_CharacterModel (&EnumValuesFB_CharacterModel())[3] {
  static const FB_CharacterModel values[] = {
    FB_CharacterModel_INVALID,
    FB_CharacterModel_RANGER_TEMPLATE,
    FB_CharacterModel_COMPANION_SPIKE
  };
  return values;
}

inline const char * const *EnumNamesFB_CharacterModel() {
  static const char * const names[4] = {
    "INVALID",
    "RANGER_TEMPLATE",
    "COMPANION_SPIKE",
    nullptr
  };
  return names;
}

inline const char *EnumNameFB_CharacterModel(FB_CharacterModel e) {
  if (flatbuffers::IsOutRange(e, FB_CharacterModel_INVALID, FB_CharacterModel_COMPANION_SPIKE)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesFB_CharacterModel()[index];
}

}  // namespace fbCharacter

#endif  // FLATBUFFERS_GENERATED_CHARACTERMODELFB_FBCHARACTER_H_
