// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_DAMAGETYPEFB_FBDAMAGE_H_
#define FLATBUFFERS_GENERATED_DAMAGETYPEFB_FBDAMAGE_H_

#include "flatbuffers/flatbuffers.h"

namespace fbDamage {

enum FB_DamageType : int8_t {
  FB_DamageType_INVALID = 0,
  FB_DamageType_NORMAL = 1,
  FB_DamageType_FIRE = 2,
  FB_DamageType_COLD = 3,
  FB_DamageType_ENERGY = 4,
  FB_DamageType_EXPLOSIVE = 5,
  FB_DamageType_MIN = FB_DamageType_INVALID,
  FB_DamageType_MAX = FB_DamageType_EXPLOSIVE
};

inline const FB_DamageType (&EnumValuesFB_DamageType())[6] {
  static const FB_DamageType values[] = {
    FB_DamageType_INVALID,
    FB_DamageType_NORMAL,
    FB_DamageType_FIRE,
    FB_DamageType_COLD,
    FB_DamageType_ENERGY,
    FB_DamageType_EXPLOSIVE
  };
  return values;
}

inline const char * const *EnumNamesFB_DamageType() {
  static const char * const names[7] = {
    "INVALID",
    "NORMAL",
    "FIRE",
    "COLD",
    "ENERGY",
    "EXPLOSIVE",
    nullptr
  };
  return names;
}

inline const char *EnumNameFB_DamageType(FB_DamageType e) {
  if (flatbuffers::IsOutRange(e, FB_DamageType_INVALID, FB_DamageType_EXPLOSIVE)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesFB_DamageType()[index];
}

}  // namespace fbDamage

#endif  // FLATBUFFERS_GENERATED_DAMAGETYPEFB_FBDAMAGE_H_
