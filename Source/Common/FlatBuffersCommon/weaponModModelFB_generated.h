// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_WEAPONMODMODELFB_FBWEAPONMOD_H_
#define FLATBUFFERS_GENERATED_WEAPONMODMODELFB_FBWEAPONMOD_H_

#include "flatbuffers/flatbuffers.h"

namespace fbWeaponMod {

enum FB_WeaponModModel : int16_t {
  FB_WeaponModModel_INVALID = 0,
  FB_WeaponModModel_BARREL_SHORTENED = 1,
  FB_WeaponModModel_BARREL_LIGHTWEIGHT = 2,
  FB_WeaponModModel_BARREL_HAMMERFORGE_RIFLED = 3,
  FB_WeaponModModel_BARREL_TITANIUM_COBALT = 4,
  FB_WeaponModModel_BARREL_BROACH_RIFLED = 5,
  FB_WeaponModModel_BARREL_COLUMBIUM = 6,
  FB_WeaponModModel_BARREL_CUT_RIFLED = 7,
  FB_WeaponModModel_BARREL_ALLOY = 8,
  FB_WeaponModModel_MAG_QUICKFIRE = 9,
  FB_WeaponModModel_MAG_ADVANCED_MATERIALS = 10,
  FB_WeaponModModel_MAG_OVERSIZED = 11,
  FB_WeaponModModel_MAG_MAX_CAPACITY = 12,
  FB_WeaponModModel_MAG_EXTENDED = 13,
  FB_WeaponModModel_MAG_LONG = 14,
  FB_WeaponModModel_MIN = FB_WeaponModModel_INVALID,
  FB_WeaponModModel_MAX = FB_WeaponModModel_MAG_LONG
};

inline const FB_WeaponModModel (&EnumValuesFB_WeaponModModel())[15] {
  static const FB_WeaponModModel values[] = {
    FB_WeaponModModel_INVALID,
    FB_WeaponModModel_BARREL_SHORTENED,
    FB_WeaponModModel_BARREL_LIGHTWEIGHT,
    FB_WeaponModModel_BARREL_HAMMERFORGE_RIFLED,
    FB_WeaponModModel_BARREL_TITANIUM_COBALT,
    FB_WeaponModModel_BARREL_BROACH_RIFLED,
    FB_WeaponModModel_BARREL_COLUMBIUM,
    FB_WeaponModModel_BARREL_CUT_RIFLED,
    FB_WeaponModModel_BARREL_ALLOY,
    FB_WeaponModModel_MAG_QUICKFIRE,
    FB_WeaponModModel_MAG_ADVANCED_MATERIALS,
    FB_WeaponModModel_MAG_OVERSIZED,
    FB_WeaponModModel_MAG_MAX_CAPACITY,
    FB_WeaponModModel_MAG_EXTENDED,
    FB_WeaponModModel_MAG_LONG
  };
  return values;
}

inline const char * const *EnumNamesFB_WeaponModModel() {
  static const char * const names[16] = {
    "INVALID",
    "BARREL_SHORTENED",
    "BARREL_LIGHTWEIGHT",
    "BARREL_HAMMERFORGE_RIFLED",
    "BARREL_TITANIUM_COBALT",
    "BARREL_BROACH_RIFLED",
    "BARREL_COLUMBIUM",
    "BARREL_CUT_RIFLED",
    "BARREL_ALLOY",
    "MAG_QUICKFIRE",
    "MAG_ADVANCED_MATERIALS",
    "MAG_OVERSIZED",
    "MAG_MAX_CAPACITY",
    "MAG_EXTENDED",
    "MAG_LONG",
    nullptr
  };
  return names;
}

inline const char *EnumNameFB_WeaponModModel(FB_WeaponModModel e) {
  if (flatbuffers::IsOutRange(e, FB_WeaponModModel_INVALID, FB_WeaponModModel_MAG_LONG)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesFB_WeaponModModel()[index];
}

}  // namespace fbWeaponMod

#endif  // FLATBUFFERS_GENERATED_WEAPONMODMODELFB_FBWEAPONMOD_H_
