
# Copyright (c) 2022 Vitaly Dikov
# 
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE or copy at https://www.boost.org/LICENSE_1_0.txt)

cmake_minimum_required(VERSION 3.20)

# specify the C++ standard
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED TRUE)

#**********************************************************************
# create Flatbuffers files for CharacterReference
set(CHARACTER_REF_FB_FILE_STEM "characterReferenceFB")
set(CHARACTER_REF_FB_BIN_FILE_IDENTIFIER "CHRR")
set(CHARACTER_REF_FB_BIN_FILE_EXTENSION "${FB_BIN_FILE_EXTENSION}")
set(CHARACTER_REF_FB_BIN_FILE_NAME "${CHARACTER_REF_FB_FILE_STEM}.${CHARACTER_REF_FB_BIN_FILE_EXTENSION}")
file(REAL_PATH "${FB_DATA_DIR_NAME}/${CHARACTER_REF_FB_BIN_FILE_NAME}" CHARACTER_REF_FB_BIN_FILE)
file(${DEFAULT_CMAKE_FILE_HASH_FUNC} "${CHARACTER_REF_FB_BIN_FILE}" CHARACTER_REF_FB_BIN_FILE__HASH)
file(RELATIVE_PATH CHARACTER_REF_FB_BIN_FILE__REL_PATH_FROM_CSD
                   "${CMAKE_SOURCE_DIR}"
                   "${CHARACTER_REF_FB_BIN_FILE}"
)
cmake_path(HASH CHARACTER_REF_FB_BIN_FILE__REL_PATH_FROM_CSD
                CHARACTER_REF_FB_BIN_FILE__REL_PATH_FROM_CSD__HASH
)
string(CONCAT CHARACTER_REF_FB_BIN_FILE_NAME__OUT
  "${CHARACTER_REF_FB_FILE_STEM}_${CHARACTER_REF_FB_BIN_FILE__REL_PATH_FROM_CSD__HASH}."
  "${CHARACTER_REF_FB_BIN_FILE_EXTENSION}"
)
file(TO_NATIVE_PATH
  "${ASSETS__DIR__REL_PATH_FROM_W3EXEC}/${CHARACTER_REF_FB_BIN_FILE_NAME__OUT}"
  CHARACTER_REF_FB_BIN_FILE__NATIVE_REL_PATH
)

cmake_language(CALL create_flatbuffers_data_files
  "${CHARACTER_REF_FB_BIN_FILE_IDENTIFIER}"
  "${CHARACTER_REF_FB_BIN_FILE_EXTENSION}"
  "${CHARACTER_REF_FB_FILE_STEM}"
)
cmake_language(CALL distribute_file
  "${CHARACTER_REF_FB_BIN_FILE}"
  "${ASSETS__DIR__REL_PATH_FROM_W3EXEC}"
  "${CHARACTER_REF_FB_BIN_FILE_NAME__OUT}"
)


#**********************************************************************
# create Flatbuffers files for SkillText
#[[set(CHARACTER_TEXT_FB_FILE_STEM "skillTextFB")
set(CHARACTER_TEXT_FB_BIN_FILE_IDENTIFIER "SKLT")
set(CHARACTER_TEXT_FB_BIN_FILE_EXTENSION "${FB_BIN_FILE_EXTENSION}")
set(CHARACTER_TEXT_FB_BIN_FILE_NAME "${CHARACTER_TEXT_FB_FILE_STEM}.${CHARACTER_TEXT_FB_BIN_FILE_EXTENSION}")
file(REAL_PATH "${FB_DATA_DIR_NAME}/${CHARACTER_TEXT_FB_BIN_FILE_NAME}" CHARACTER_TEXT_FB_BIN_FILE)
file(${DEFAULT_CMAKE_FILE_HASH_FUNC} "${CHARACTER_TEXT_FB_BIN_FILE}" CHARACTER_TEXT_FB_BIN_FILE__HASH)
file(RELATIVE_PATH CHARACTER_TEXT_FB_BIN_FILE__REL_PATH_FROM_CSD
                   "${CMAKE_SOURCE_DIR}"
                   "${CHARACTER_TEXT_FB_BIN_FILE}"
)
cmake_path(HASH CHARACTER_TEXT_FB_BIN_FILE__REL_PATH_FROM_CSD
                CHARACTER_TEXT_FB_BIN_FILE__REL_PATH_FROM_CSD__HASH
)
string(CONCAT CHARACTER_TEXT_FB_BIN_FILE_NAME__OUT
  "${CHARACTER_TEXT_FB_FILE_STEM}_${CHARACTER_TEXT_FB_BIN_FILE__REL_PATH_FROM_CSD__HASH}."
  "${CHARACTER_TEXT_FB_BIN_FILE_EXTENSION}"
)
file(TO_NATIVE_PATH
  "${ASSETS__DIR__REL_PATH_FROM_W3EXEC}/${CHARACTER_TEXT_FB_BIN_FILE_NAME__OUT}"
  CHARACTER_TEXT_FB_BIN_FILE__NATIVE_REL_PATH
)

cmake_language(CALL create_flatbuffers_data_files
  "${CHARACTER_TEXT_FB_BIN_FILE_IDENTIFIER}"
  "${CHARACTER_TEXT_FB_BIN_FILE_EXTENSION}"
  "${CHARACTER_TEXT_FB_FILE_STEM}"
)
cmake_language(CALL distribute_file
  "${CHARACTER_TEXT_FB_BIN_FILE}"
  "${ASSETS__DIR__REL_PATH_FROM_W3EXEC}"
  "${CHARACTER_TEXT_FB_BIN_FILE_NAME__OUT}"
)
#]]


#**********************************************************************
# create header file with paths
set(CHARACTER_PATH_FILE_NAME "characterPath.hpp")
cmake_language(CALL create_file "${CHARACTER_PATH_FILE_NAME}.in")
configure_file("${CHARACTER_PATH_FILE_NAME}.in"
               "${CMAKE_CURRENT_SOURCE_DIR}/${CHARACTER_PATH_FILE_NAME}"
)
