// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_SKILLREFERENCEFB_FBSKILL_H_
#define FLATBUFFERS_GENERATED_SKILLREFERENCEFB_FBSKILL_H_

#include "flatbuffers/flatbuffers.h"

namespace fbSkill {

struct FB_PointSkillDistribution;

struct FB_AutomaticWeaponsDistribution;

struct FB_BigGunsDistribution;

struct FB_BrawlingDistribution;

struct FB_MeleeCombatDistribution;

struct FB_SmallArmsDistribution;

struct FB_SniperDistribution;

struct FB_AnimalWhispererDistribution;

struct FB_ExplosivesDistribution;

struct FB_FirstAidDistribution;

struct FB_SneakyShitDistribution;

struct FB_WeirdScienceDistribution;

struct FB_MechanicsDistribution;

struct FB_SurvivalDistribution;

struct FB_WeaponModdingDistribution;

struct FB_BarterDistribution;

struct FB_LeadershipDistribution;

struct FB_SkillReference;
struct FB_SkillReferenceBuilder;

FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) FB_PointSkillDistribution FLATBUFFERS_FINAL_CLASS {
 private:
  int16_t p_[11];

 public:
  FB_PointSkillDistribution()
      : p_() {
  }
  FB_PointSkillDistribution(flatbuffers::span<const int16_t, 11> _p) {
    flatbuffers::CastToArray(p_).CopyFromSpan(_p);
  }
  const flatbuffers::Array<int16_t, 11> *p() const {
    return &flatbuffers::CastToArray(p_);
  }
};
FLATBUFFERS_STRUCT_END(FB_PointSkillDistribution, 22);

/// --------------------Combat skills--------------------
/// SKILL LEVEL:
/// 0     1     2     3     4     5     6     7     8     9    10
FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) FB_AutomaticWeaponsDistribution FLATBUFFERS_FINAL_CLASS {
 private:
  int16_t ar_hit_[11];
  int16_t smg_hit_[11];

 public:
  FB_AutomaticWeaponsDistribution()
      : ar_hit_(),
        smg_hit_() {
  }
  FB_AutomaticWeaponsDistribution(flatbuffers::span<const int16_t, 11> _ar_hit, flatbuffers::span<const int16_t, 11> _smg_hit) {
    flatbuffers::CastToArray(ar_hit_).CopyFromSpan(_ar_hit);
    flatbuffers::CastToArray(smg_hit_).CopyFromSpan(_smg_hit);
  }
  const flatbuffers::Array<int16_t, 11> *ar_hit() const {
    return &flatbuffers::CastToArray(ar_hit_);
  }
  const flatbuffers::Array<int16_t, 11> *smg_hit() const {
    return &flatbuffers::CastToArray(smg_hit_);
  }
};
FLATBUFFERS_STRUCT_END(FB_AutomaticWeaponsDistribution, 44);

/// SKILL LEVEL:
/// 0     1     2     3     4     5     6     7     8     9    10
FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) FB_BigGunsDistribution FLATBUFFERS_FINAL_CLASS {
 private:
  int16_t hmg_hit_[11];
  int16_t ft_hit_[11];

 public:
  FB_BigGunsDistribution()
      : hmg_hit_(),
        ft_hit_() {
  }
  FB_BigGunsDistribution(flatbuffers::span<const int16_t, 11> _hmg_hit, flatbuffers::span<const int16_t, 11> _ft_hit) {
    flatbuffers::CastToArray(hmg_hit_).CopyFromSpan(_hmg_hit);
    flatbuffers::CastToArray(ft_hit_).CopyFromSpan(_ft_hit);
  }
  const flatbuffers::Array<int16_t, 11> *hmg_hit() const {
    return &flatbuffers::CastToArray(hmg_hit_);
  }
  const flatbuffers::Array<int16_t, 11> *ft_hit() const {
    return &flatbuffers::CastToArray(ft_hit_);
  }
};
FLATBUFFERS_STRUCT_END(FB_BigGunsDistribution, 44);

/// SKILL LEVEL:
/// 0     1     2     3     4     5     6     7     8     9    10
FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) FB_BrawlingDistribution FLATBUFFERS_FINAL_CLASS {
 private:
  int16_t combat_speed_[11];
  int16_t weapon_hit_[11];

 public:
  FB_BrawlingDistribution()
      : combat_speed_(),
        weapon_hit_() {
  }
  FB_BrawlingDistribution(flatbuffers::span<const int16_t, 11> _combat_speed, flatbuffers::span<const int16_t, 11> _weapon_hit) {
    flatbuffers::CastToArray(combat_speed_).CopyFromSpan(_combat_speed);
    flatbuffers::CastToArray(weapon_hit_).CopyFromSpan(_weapon_hit);
  }
  const flatbuffers::Array<int16_t, 11> *combat_speed() const {
    return &flatbuffers::CastToArray(combat_speed_);
  }
  const flatbuffers::Array<int16_t, 11> *weapon_hit() const {
    return &flatbuffers::CastToArray(weapon_hit_);
  }
};
FLATBUFFERS_STRUCT_END(FB_BrawlingDistribution, 44);

/// SKILL LEVEL:
/// 0     1     2     3     4     5     6     7     8     9    10
FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) FB_MeleeCombatDistribution FLATBUFFERS_FINAL_CLASS {
 private:
  int16_t blunt_hit_[11];
  int16_t bladed_hit_[11];

 public:
  FB_MeleeCombatDistribution()
      : blunt_hit_(),
        bladed_hit_() {
  }
  FB_MeleeCombatDistribution(flatbuffers::span<const int16_t, 11> _blunt_hit, flatbuffers::span<const int16_t, 11> _bladed_hit) {
    flatbuffers::CastToArray(blunt_hit_).CopyFromSpan(_blunt_hit);
    flatbuffers::CastToArray(bladed_hit_).CopyFromSpan(_bladed_hit);
  }
  const flatbuffers::Array<int16_t, 11> *blunt_hit() const {
    return &flatbuffers::CastToArray(blunt_hit_);
  }
  const flatbuffers::Array<int16_t, 11> *bladed_hit() const {
    return &flatbuffers::CastToArray(bladed_hit_);
  }
};
FLATBUFFERS_STRUCT_END(FB_MeleeCombatDistribution, 44);

/// SKILL LEVEL:
/// 0     1     2     3     4     5     6     7     8     9    10
FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) FB_SmallArmsDistribution FLATBUFFERS_FINAL_CLASS {
 private:
  int16_t sa_pistol_hit_[11];
  int16_t revolver_hit_[11];
  int16_t pump_sg_hit_[11];
  int16_t auto_sg_hit_[11];

 public:
  FB_SmallArmsDistribution()
      : sa_pistol_hit_(),
        revolver_hit_(),
        pump_sg_hit_(),
        auto_sg_hit_() {
  }
  FB_SmallArmsDistribution(flatbuffers::span<const int16_t, 11> _sa_pistol_hit, flatbuffers::span<const int16_t, 11> _revolver_hit, flatbuffers::span<const int16_t, 11> _pump_sg_hit, flatbuffers::span<const int16_t, 11> _auto_sg_hit) {
    flatbuffers::CastToArray(sa_pistol_hit_).CopyFromSpan(_sa_pistol_hit);
    flatbuffers::CastToArray(revolver_hit_).CopyFromSpan(_revolver_hit);
    flatbuffers::CastToArray(pump_sg_hit_).CopyFromSpan(_pump_sg_hit);
    flatbuffers::CastToArray(auto_sg_hit_).CopyFromSpan(_auto_sg_hit);
  }
  const flatbuffers::Array<int16_t, 11> *sa_pistol_hit() const {
    return &flatbuffers::CastToArray(sa_pistol_hit_);
  }
  const flatbuffers::Array<int16_t, 11> *revolver_hit() const {
    return &flatbuffers::CastToArray(revolver_hit_);
  }
  const flatbuffers::Array<int16_t, 11> *pump_sg_hit() const {
    return &flatbuffers::CastToArray(pump_sg_hit_);
  }
  const flatbuffers::Array<int16_t, 11> *auto_sg_hit() const {
    return &flatbuffers::CastToArray(auto_sg_hit_);
  }
};
FLATBUFFERS_STRUCT_END(FB_SmallArmsDistribution, 88);

/// SKILL LEVEL:
/// 0     1     2     3     4     5     6     7     8     9    10
FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) FB_SniperDistribution FLATBUFFERS_FINAL_CLASS {
 private:
  int16_t sr_hit_[11];

 public:
  FB_SniperDistribution()
      : sr_hit_() {
  }
  FB_SniperDistribution(flatbuffers::span<const int16_t, 11> _sr_hit) {
    flatbuffers::CastToArray(sr_hit_).CopyFromSpan(_sr_hit);
  }
  const flatbuffers::Array<int16_t, 11> *sr_hit() const {
    return &flatbuffers::CastToArray(sr_hit_);
  }
};
FLATBUFFERS_STRUCT_END(FB_SniperDistribution, 22);

/// --------------------General skills--------------------
/// SKILL LEVEL:
/// 0     1     2     3     4     5     6     7     8     9    10
FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) FB_AnimalWhispererDistribution FLATBUFFERS_FINAL_CLASS {
 private:
  int16_t animal_dmg_[11];

 public:
  FB_AnimalWhispererDistribution()
      : animal_dmg_() {
  }
  FB_AnimalWhispererDistribution(flatbuffers::span<const int16_t, 11> _animal_dmg) {
    flatbuffers::CastToArray(animal_dmg_).CopyFromSpan(_animal_dmg);
  }
  const flatbuffers::Array<int16_t, 11> *animal_dmg() const {
    return &flatbuffers::CastToArray(animal_dmg_);
  }
};
FLATBUFFERS_STRUCT_END(FB_AnimalWhispererDistribution, 22);

/// SKILL LEVEL:
/// 0     1     2     3     4     5     6     7     8     9    10
FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) FB_ExplosivesDistribution FLATBUFFERS_FINAL_CLASS {
 private:
  int16_t expl_dmg_resist_[11];
  int16_t expl_dmg_bonus_[11];

 public:
  FB_ExplosivesDistribution()
      : expl_dmg_resist_(),
        expl_dmg_bonus_() {
  }
  FB_ExplosivesDistribution(flatbuffers::span<const int16_t, 11> _expl_dmg_resist, flatbuffers::span<const int16_t, 11> _expl_dmg_bonus) {
    flatbuffers::CastToArray(expl_dmg_resist_).CopyFromSpan(_expl_dmg_resist);
    flatbuffers::CastToArray(expl_dmg_bonus_).CopyFromSpan(_expl_dmg_bonus);
  }
  const flatbuffers::Array<int16_t, 11> *expl_dmg_resist() const {
    return &flatbuffers::CastToArray(expl_dmg_resist_);
  }
  const flatbuffers::Array<int16_t, 11> *expl_dmg_bonus() const {
    return &flatbuffers::CastToArray(expl_dmg_bonus_);
  }
};
FLATBUFFERS_STRUCT_END(FB_ExplosivesDistribution, 44);

/// SKILL LEVEL:
/// 0     1     2     3     4     5     6     7     8     9    10
FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) FB_FirstAidDistribution FLATBUFFERS_FINAL_CLASS {
 private:
  int16_t healing_item_[11];
  int16_t healing_revive_[11];

 public:
  FB_FirstAidDistribution()
      : healing_item_(),
        healing_revive_() {
  }
  FB_FirstAidDistribution(flatbuffers::span<const int16_t, 11> _healing_item, flatbuffers::span<const int16_t, 11> _healing_revive) {
    flatbuffers::CastToArray(healing_item_).CopyFromSpan(_healing_item);
    flatbuffers::CastToArray(healing_revive_).CopyFromSpan(_healing_revive);
  }
  const flatbuffers::Array<int16_t, 11> *healing_item() const {
    return &flatbuffers::CastToArray(healing_item_);
  }
  const flatbuffers::Array<int16_t, 11> *healing_revive() const {
    return &flatbuffers::CastToArray(healing_revive_);
  }
};
FLATBUFFERS_STRUCT_END(FB_FirstAidDistribution, 44);

/// SKILL LEVEL:
/// 0     1     2     3     4     5     6     7     8     9    10
FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(4) FB_SneakyShitDistribution FLATBUFFERS_FINAL_CLASS {
 private:
  int8_t percep_[11];
  int8_t padding0__;
  int16_t initiative_[11];
  int16_t padding1__;
  int32_t detection_time_[11];
  int16_t attack_dmg_[11];
  int16_t padding2__;

 public:
  FB_SneakyShitDistribution()
      : percep_(),
        padding0__(0),
        initiative_(),
        padding1__(0),
        detection_time_(),
        attack_dmg_(),
        padding2__(0) {
    (void)padding0__;
    (void)padding1__;
    (void)padding2__;
  }
  FB_SneakyShitDistribution(flatbuffers::span<const int8_t, 11> _percep, flatbuffers::span<const int16_t, 11> _initiative, flatbuffers::span<const int32_t, 11> _detection_time, flatbuffers::span<const int16_t, 11> _attack_dmg)
      : padding0__(0),
        padding1__(0),
        padding2__(0) {
    flatbuffers::CastToArray(percep_).CopyFromSpan(_percep);
    (void)padding0__;
    flatbuffers::CastToArray(initiative_).CopyFromSpan(_initiative);
    (void)padding1__;
    flatbuffers::CastToArray(detection_time_).CopyFromSpan(_detection_time);
    flatbuffers::CastToArray(attack_dmg_).CopyFromSpan(_attack_dmg);
    (void)padding2__;
  }
  const flatbuffers::Array<int8_t, 11> *percep() const {
    return &flatbuffers::CastToArray(percep_);
  }
  const flatbuffers::Array<int16_t, 11> *initiative() const {
    return &flatbuffers::CastToArray(initiative_);
  }
  const flatbuffers::Array<int32_t, 11> *detection_time() const {
    return &flatbuffers::CastToArray(detection_time_);
  }
  const flatbuffers::Array<int16_t, 11> *attack_dmg() const {
    return &flatbuffers::CastToArray(attack_dmg_);
  }
};
FLATBUFFERS_STRUCT_END(FB_SneakyShitDistribution, 104);

/// SKILL LEVEL:
/// 0     1     2     3     4     5     6     7     8     9    10
FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) FB_WeirdScienceDistribution FLATBUFFERS_FINAL_CLASS {
 private:
  int16_t energy_dmg_[11];
  int16_t fire_dmg_[11];
  int16_t cold_dmg_[11];

 public:
  FB_WeirdScienceDistribution()
      : energy_dmg_(),
        fire_dmg_(),
        cold_dmg_() {
  }
  FB_WeirdScienceDistribution(flatbuffers::span<const int16_t, 11> _energy_dmg, flatbuffers::span<const int16_t, 11> _fire_dmg, flatbuffers::span<const int16_t, 11> _cold_dmg) {
    flatbuffers::CastToArray(energy_dmg_).CopyFromSpan(_energy_dmg);
    flatbuffers::CastToArray(fire_dmg_).CopyFromSpan(_fire_dmg);
    flatbuffers::CastToArray(cold_dmg_).CopyFromSpan(_cold_dmg);
  }
  const flatbuffers::Array<int16_t, 11> *energy_dmg() const {
    return &flatbuffers::CastToArray(energy_dmg_);
  }
  const flatbuffers::Array<int16_t, 11> *fire_dmg() const {
    return &flatbuffers::CastToArray(fire_dmg_);
  }
  const flatbuffers::Array<int16_t, 11> *cold_dmg() const {
    return &flatbuffers::CastToArray(cold_dmg_);
  }
};
FLATBUFFERS_STRUCT_END(FB_WeirdScienceDistribution, 66);

/// --------------------Exploration skills--------------------
/// SKILL LEVEL:
/// 0     1     2     3     4     5     6     7     8     9    10
FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) FB_MechanicsDistribution FLATBUFFERS_FINAL_CLASS {
 private:
  int16_t robot_dmg_[11];
  int16_t vehicle_dmg_[11];
  int16_t synth_dmg_[11];
  int16_t repair_kit_[11];

 public:
  FB_MechanicsDistribution()
      : robot_dmg_(),
        vehicle_dmg_(),
        synth_dmg_(),
        repair_kit_() {
  }
  FB_MechanicsDistribution(flatbuffers::span<const int16_t, 11> _robot_dmg, flatbuffers::span<const int16_t, 11> _vehicle_dmg, flatbuffers::span<const int16_t, 11> _synth_dmg, flatbuffers::span<const int16_t, 11> _repair_kit) {
    flatbuffers::CastToArray(robot_dmg_).CopyFromSpan(_robot_dmg);
    flatbuffers::CastToArray(vehicle_dmg_).CopyFromSpan(_vehicle_dmg);
    flatbuffers::CastToArray(synth_dmg_).CopyFromSpan(_synth_dmg);
    flatbuffers::CastToArray(repair_kit_).CopyFromSpan(_repair_kit);
  }
  const flatbuffers::Array<int16_t, 11> *robot_dmg() const {
    return &flatbuffers::CastToArray(robot_dmg_);
  }
  const flatbuffers::Array<int16_t, 11> *vehicle_dmg() const {
    return &flatbuffers::CastToArray(vehicle_dmg_);
  }
  const flatbuffers::Array<int16_t, 11> *synth_dmg() const {
    return &flatbuffers::CastToArray(synth_dmg_);
  }
  const flatbuffers::Array<int16_t, 11> *repair_kit() const {
    return &flatbuffers::CastToArray(repair_kit_);
  }
};
FLATBUFFERS_STRUCT_END(FB_MechanicsDistribution, 88);

/// SKILL LEVEL:
/// 0     1     2     3     4     5     6     7     8     9    10
FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) FB_SurvivalDistribution FLATBUFFERS_FINAL_CLASS {
 private:
  int16_t animal_dmg_[11];
  int16_t mutant_dmg_[11];

 public:
  FB_SurvivalDistribution()
      : animal_dmg_(),
        mutant_dmg_() {
  }
  FB_SurvivalDistribution(flatbuffers::span<const int16_t, 11> _animal_dmg, flatbuffers::span<const int16_t, 11> _mutant_dmg) {
    flatbuffers::CastToArray(animal_dmg_).CopyFromSpan(_animal_dmg);
    flatbuffers::CastToArray(mutant_dmg_).CopyFromSpan(_mutant_dmg);
  }
  const flatbuffers::Array<int16_t, 11> *animal_dmg() const {
    return &flatbuffers::CastToArray(animal_dmg_);
  }
  const flatbuffers::Array<int16_t, 11> *mutant_dmg() const {
    return &flatbuffers::CastToArray(mutant_dmg_);
  }
};
FLATBUFFERS_STRUCT_END(FB_SurvivalDistribution, 44);

/// SKILL LEVEL:
/// 0     1     2     3     4     5     6     7     8     9    10
FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) FB_WeaponModdingDistribution FLATBUFFERS_FINAL_CLASS {
 private:
  int16_t scrap_[11];

 public:
  FB_WeaponModdingDistribution()
      : scrap_() {
  }
  FB_WeaponModdingDistribution(flatbuffers::span<const int16_t, 11> _scrap) {
    flatbuffers::CastToArray(scrap_).CopyFromSpan(_scrap);
  }
  const flatbuffers::Array<int16_t, 11> *scrap() const {
    return &flatbuffers::CastToArray(scrap_);
  }
};
FLATBUFFERS_STRUCT_END(FB_WeaponModdingDistribution, 22);

/// --------------------Social skills--------------------
/// SKILL LEVEL:
/// 0     1     2     3     4     5     6     7     8     9    10
FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) FB_BarterDistribution FLATBUFFERS_FINAL_CLASS {
 private:
  int16_t sell_value_[11];
  int16_t buy_cost_[11];

 public:
  FB_BarterDistribution()
      : sell_value_(),
        buy_cost_() {
  }
  FB_BarterDistribution(flatbuffers::span<const int16_t, 11> _sell_value, flatbuffers::span<const int16_t, 11> _buy_cost) {
    flatbuffers::CastToArray(sell_value_).CopyFromSpan(_sell_value);
    flatbuffers::CastToArray(buy_cost_).CopyFromSpan(_buy_cost);
  }
  const flatbuffers::Array<int16_t, 11> *sell_value() const {
    return &flatbuffers::CastToArray(sell_value_);
  }
  const flatbuffers::Array<int16_t, 11> *buy_cost() const {
    return &flatbuffers::CastToArray(buy_cost_);
  }
};
FLATBUFFERS_STRUCT_END(FB_BarterDistribution, 44);

/// SKILL LEVEL:
/// 0     1     2     3     4     5     6     7     8     9    10
FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) FB_LeadershipDistribution FLATBUFFERS_FINAL_CLASS {
 private:
  int16_t hit_chance_[11];
  int16_t boss_kill_dmg_[11];
  int16_t multi_kill_crit_chance_[11];
  int16_t revive_con_healed_[11];

 public:
  FB_LeadershipDistribution()
      : hit_chance_(),
        boss_kill_dmg_(),
        multi_kill_crit_chance_(),
        revive_con_healed_() {
  }
  FB_LeadershipDistribution(flatbuffers::span<const int16_t, 11> _hit_chance, flatbuffers::span<const int16_t, 11> _boss_kill_dmg, flatbuffers::span<const int16_t, 11> _multi_kill_crit_chance, flatbuffers::span<const int16_t, 11> _revive_con_healed) {
    flatbuffers::CastToArray(hit_chance_).CopyFromSpan(_hit_chance);
    flatbuffers::CastToArray(boss_kill_dmg_).CopyFromSpan(_boss_kill_dmg);
    flatbuffers::CastToArray(multi_kill_crit_chance_).CopyFromSpan(_multi_kill_crit_chance);
    flatbuffers::CastToArray(revive_con_healed_).CopyFromSpan(_revive_con_healed);
  }
  const flatbuffers::Array<int16_t, 11> *hit_chance() const {
    return &flatbuffers::CastToArray(hit_chance_);
  }
  const flatbuffers::Array<int16_t, 11> *boss_kill_dmg() const {
    return &flatbuffers::CastToArray(boss_kill_dmg_);
  }
  const flatbuffers::Array<int16_t, 11> *multi_kill_crit_chance() const {
    return &flatbuffers::CastToArray(multi_kill_crit_chance_);
  }
  const flatbuffers::Array<int16_t, 11> *revive_con_healed() const {
    return &flatbuffers::CastToArray(revive_con_healed_);
  }
};
FLATBUFFERS_STRUCT_END(FB_LeadershipDistribution, 88);

struct FB_SkillReference FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef FB_SkillReferenceBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_MIN_SKILL_POINTS = 4,
    VT_MAX_SKILL_POINTS = 6,
    VT_MIN_SKILL_LEVEL = 8,
    VT_MAX_SKILL_LEVEL = 10,
    VT_POINT_SKILL_DISTR = 12,
    VT_AUTOMATIC_DISTR = 14,
    VT_BIG_GUNS_DISTR = 16,
    VT_BRAWLING_DISTR = 18,
    VT_MELEE_DISTR = 20,
    VT_SMALL_ARMS_DISTR = 22,
    VT_SNIPER_DISTR = 24,
    VT_ANIMAL_WHISPERER_DISRT = 26,
    VT_EXPLOSIVES_DISTR = 28,
    VT_FIRST_AID_DISTR = 30,
    VT_SNEAKY_SHIT_DISTR = 32,
    VT_WEIRD_SCIENCE_DISTR = 34,
    VT_MECHANICS_DISTR = 36,
    VT_SURVIVAL_DISTR = 38,
    VT_WEAPON_MODDING_DISTR = 40,
    VT_BARTER_DISTR = 42,
    VT_LEADERSHIP_DISTR = 44
  };
  int16_t min_skill_points() const {
    return GetField<int16_t>(VT_MIN_SKILL_POINTS, 0);
  }
  int16_t max_skill_points() const {
    return GetField<int16_t>(VT_MAX_SKILL_POINTS, 0);
  }
  int8_t min_skill_level() const {
    return GetField<int8_t>(VT_MIN_SKILL_LEVEL, 0);
  }
  int8_t max_skill_level() const {
    return GetField<int8_t>(VT_MAX_SKILL_LEVEL, 0);
  }
  const fbSkill::FB_PointSkillDistribution *point_skill_distr() const {
    return GetStruct<const fbSkill::FB_PointSkillDistribution *>(VT_POINT_SKILL_DISTR);
  }
  const fbSkill::FB_AutomaticWeaponsDistribution *automatic_distr() const {
    return GetStruct<const fbSkill::FB_AutomaticWeaponsDistribution *>(VT_AUTOMATIC_DISTR);
  }
  const fbSkill::FB_BigGunsDistribution *big_guns_distr() const {
    return GetStruct<const fbSkill::FB_BigGunsDistribution *>(VT_BIG_GUNS_DISTR);
  }
  const fbSkill::FB_BrawlingDistribution *brawling_distr() const {
    return GetStruct<const fbSkill::FB_BrawlingDistribution *>(VT_BRAWLING_DISTR);
  }
  const fbSkill::FB_MeleeCombatDistribution *melee_distr() const {
    return GetStruct<const fbSkill::FB_MeleeCombatDistribution *>(VT_MELEE_DISTR);
  }
  const fbSkill::FB_SmallArmsDistribution *small_arms_distr() const {
    return GetStruct<const fbSkill::FB_SmallArmsDistribution *>(VT_SMALL_ARMS_DISTR);
  }
  const fbSkill::FB_SniperDistribution *sniper_distr() const {
    return GetStruct<const fbSkill::FB_SniperDistribution *>(VT_SNIPER_DISTR);
  }
  const fbSkill::FB_AnimalWhispererDistribution *animal_whisperer_disrt() const {
    return GetStruct<const fbSkill::FB_AnimalWhispererDistribution *>(VT_ANIMAL_WHISPERER_DISRT);
  }
  const fbSkill::FB_ExplosivesDistribution *explosives_distr() const {
    return GetStruct<const fbSkill::FB_ExplosivesDistribution *>(VT_EXPLOSIVES_DISTR);
  }
  const fbSkill::FB_FirstAidDistribution *first_aid_distr() const {
    return GetStruct<const fbSkill::FB_FirstAidDistribution *>(VT_FIRST_AID_DISTR);
  }
  const fbSkill::FB_SneakyShitDistribution *sneaky_shit_distr() const {
    return GetStruct<const fbSkill::FB_SneakyShitDistribution *>(VT_SNEAKY_SHIT_DISTR);
  }
  const fbSkill::FB_WeirdScienceDistribution *weird_science_distr() const {
    return GetStruct<const fbSkill::FB_WeirdScienceDistribution *>(VT_WEIRD_SCIENCE_DISTR);
  }
  const fbSkill::FB_MechanicsDistribution *mechanics_distr() const {
    return GetStruct<const fbSkill::FB_MechanicsDistribution *>(VT_MECHANICS_DISTR);
  }
  const fbSkill::FB_SurvivalDistribution *survival_distr() const {
    return GetStruct<const fbSkill::FB_SurvivalDistribution *>(VT_SURVIVAL_DISTR);
  }
  const fbSkill::FB_WeaponModdingDistribution *weapon_modding_distr() const {
    return GetStruct<const fbSkill::FB_WeaponModdingDistribution *>(VT_WEAPON_MODDING_DISTR);
  }
  const fbSkill::FB_BarterDistribution *barter_distr() const {
    return GetStruct<const fbSkill::FB_BarterDistribution *>(VT_BARTER_DISTR);
  }
  const fbSkill::FB_LeadershipDistribution *leadership_distr() const {
    return GetStruct<const fbSkill::FB_LeadershipDistribution *>(VT_LEADERSHIP_DISTR);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<int16_t>(verifier, VT_MIN_SKILL_POINTS) &&
           VerifyField<int16_t>(verifier, VT_MAX_SKILL_POINTS) &&
           VerifyField<int8_t>(verifier, VT_MIN_SKILL_LEVEL) &&
           VerifyField<int8_t>(verifier, VT_MAX_SKILL_LEVEL) &&
           VerifyField<fbSkill::FB_PointSkillDistribution>(verifier, VT_POINT_SKILL_DISTR) &&
           VerifyField<fbSkill::FB_AutomaticWeaponsDistribution>(verifier, VT_AUTOMATIC_DISTR) &&
           VerifyField<fbSkill::FB_BigGunsDistribution>(verifier, VT_BIG_GUNS_DISTR) &&
           VerifyField<fbSkill::FB_BrawlingDistribution>(verifier, VT_BRAWLING_DISTR) &&
           VerifyField<fbSkill::FB_MeleeCombatDistribution>(verifier, VT_MELEE_DISTR) &&
           VerifyField<fbSkill::FB_SmallArmsDistribution>(verifier, VT_SMALL_ARMS_DISTR) &&
           VerifyField<fbSkill::FB_SniperDistribution>(verifier, VT_SNIPER_DISTR) &&
           VerifyField<fbSkill::FB_AnimalWhispererDistribution>(verifier, VT_ANIMAL_WHISPERER_DISRT) &&
           VerifyField<fbSkill::FB_ExplosivesDistribution>(verifier, VT_EXPLOSIVES_DISTR) &&
           VerifyField<fbSkill::FB_FirstAidDistribution>(verifier, VT_FIRST_AID_DISTR) &&
           VerifyField<fbSkill::FB_SneakyShitDistribution>(verifier, VT_SNEAKY_SHIT_DISTR) &&
           VerifyField<fbSkill::FB_WeirdScienceDistribution>(verifier, VT_WEIRD_SCIENCE_DISTR) &&
           VerifyField<fbSkill::FB_MechanicsDistribution>(verifier, VT_MECHANICS_DISTR) &&
           VerifyField<fbSkill::FB_SurvivalDistribution>(verifier, VT_SURVIVAL_DISTR) &&
           VerifyField<fbSkill::FB_WeaponModdingDistribution>(verifier, VT_WEAPON_MODDING_DISTR) &&
           VerifyField<fbSkill::FB_BarterDistribution>(verifier, VT_BARTER_DISTR) &&
           VerifyField<fbSkill::FB_LeadershipDistribution>(verifier, VT_LEADERSHIP_DISTR) &&
           verifier.EndTable();
  }
};

struct FB_SkillReferenceBuilder {
  typedef FB_SkillReference Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_min_skill_points(int16_t min_skill_points) {
    fbb_.AddElement<int16_t>(FB_SkillReference::VT_MIN_SKILL_POINTS, min_skill_points, 0);
  }
  void add_max_skill_points(int16_t max_skill_points) {
    fbb_.AddElement<int16_t>(FB_SkillReference::VT_MAX_SKILL_POINTS, max_skill_points, 0);
  }
  void add_min_skill_level(int8_t min_skill_level) {
    fbb_.AddElement<int8_t>(FB_SkillReference::VT_MIN_SKILL_LEVEL, min_skill_level, 0);
  }
  void add_max_skill_level(int8_t max_skill_level) {
    fbb_.AddElement<int8_t>(FB_SkillReference::VT_MAX_SKILL_LEVEL, max_skill_level, 0);
  }
  void add_point_skill_distr(const fbSkill::FB_PointSkillDistribution *point_skill_distr) {
    fbb_.AddStruct(FB_SkillReference::VT_POINT_SKILL_DISTR, point_skill_distr);
  }
  void add_automatic_distr(const fbSkill::FB_AutomaticWeaponsDistribution *automatic_distr) {
    fbb_.AddStruct(FB_SkillReference::VT_AUTOMATIC_DISTR, automatic_distr);
  }
  void add_big_guns_distr(const fbSkill::FB_BigGunsDistribution *big_guns_distr) {
    fbb_.AddStruct(FB_SkillReference::VT_BIG_GUNS_DISTR, big_guns_distr);
  }
  void add_brawling_distr(const fbSkill::FB_BrawlingDistribution *brawling_distr) {
    fbb_.AddStruct(FB_SkillReference::VT_BRAWLING_DISTR, brawling_distr);
  }
  void add_melee_distr(const fbSkill::FB_MeleeCombatDistribution *melee_distr) {
    fbb_.AddStruct(FB_SkillReference::VT_MELEE_DISTR, melee_distr);
  }
  void add_small_arms_distr(const fbSkill::FB_SmallArmsDistribution *small_arms_distr) {
    fbb_.AddStruct(FB_SkillReference::VT_SMALL_ARMS_DISTR, small_arms_distr);
  }
  void add_sniper_distr(const fbSkill::FB_SniperDistribution *sniper_distr) {
    fbb_.AddStruct(FB_SkillReference::VT_SNIPER_DISTR, sniper_distr);
  }
  void add_animal_whisperer_disrt(const fbSkill::FB_AnimalWhispererDistribution *animal_whisperer_disrt) {
    fbb_.AddStruct(FB_SkillReference::VT_ANIMAL_WHISPERER_DISRT, animal_whisperer_disrt);
  }
  void add_explosives_distr(const fbSkill::FB_ExplosivesDistribution *explosives_distr) {
    fbb_.AddStruct(FB_SkillReference::VT_EXPLOSIVES_DISTR, explosives_distr);
  }
  void add_first_aid_distr(const fbSkill::FB_FirstAidDistribution *first_aid_distr) {
    fbb_.AddStruct(FB_SkillReference::VT_FIRST_AID_DISTR, first_aid_distr);
  }
  void add_sneaky_shit_distr(const fbSkill::FB_SneakyShitDistribution *sneaky_shit_distr) {
    fbb_.AddStruct(FB_SkillReference::VT_SNEAKY_SHIT_DISTR, sneaky_shit_distr);
  }
  void add_weird_science_distr(const fbSkill::FB_WeirdScienceDistribution *weird_science_distr) {
    fbb_.AddStruct(FB_SkillReference::VT_WEIRD_SCIENCE_DISTR, weird_science_distr);
  }
  void add_mechanics_distr(const fbSkill::FB_MechanicsDistribution *mechanics_distr) {
    fbb_.AddStruct(FB_SkillReference::VT_MECHANICS_DISTR, mechanics_distr);
  }
  void add_survival_distr(const fbSkill::FB_SurvivalDistribution *survival_distr) {
    fbb_.AddStruct(FB_SkillReference::VT_SURVIVAL_DISTR, survival_distr);
  }
  void add_weapon_modding_distr(const fbSkill::FB_WeaponModdingDistribution *weapon_modding_distr) {
    fbb_.AddStruct(FB_SkillReference::VT_WEAPON_MODDING_DISTR, weapon_modding_distr);
  }
  void add_barter_distr(const fbSkill::FB_BarterDistribution *barter_distr) {
    fbb_.AddStruct(FB_SkillReference::VT_BARTER_DISTR, barter_distr);
  }
  void add_leadership_distr(const fbSkill::FB_LeadershipDistribution *leadership_distr) {
    fbb_.AddStruct(FB_SkillReference::VT_LEADERSHIP_DISTR, leadership_distr);
  }
  explicit FB_SkillReferenceBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<FB_SkillReference> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<FB_SkillReference>(end);
    return o;
  }
};

inline flatbuffers::Offset<FB_SkillReference> CreateFB_SkillReference(
    flatbuffers::FlatBufferBuilder &_fbb,
    int16_t min_skill_points = 0,
    int16_t max_skill_points = 0,
    int8_t min_skill_level = 0,
    int8_t max_skill_level = 0,
    const fbSkill::FB_PointSkillDistribution *point_skill_distr = 0,
    const fbSkill::FB_AutomaticWeaponsDistribution *automatic_distr = 0,
    const fbSkill::FB_BigGunsDistribution *big_guns_distr = 0,
    const fbSkill::FB_BrawlingDistribution *brawling_distr = 0,
    const fbSkill::FB_MeleeCombatDistribution *melee_distr = 0,
    const fbSkill::FB_SmallArmsDistribution *small_arms_distr = 0,
    const fbSkill::FB_SniperDistribution *sniper_distr = 0,
    const fbSkill::FB_AnimalWhispererDistribution *animal_whisperer_disrt = 0,
    const fbSkill::FB_ExplosivesDistribution *explosives_distr = 0,
    const fbSkill::FB_FirstAidDistribution *first_aid_distr = 0,
    const fbSkill::FB_SneakyShitDistribution *sneaky_shit_distr = 0,
    const fbSkill::FB_WeirdScienceDistribution *weird_science_distr = 0,
    const fbSkill::FB_MechanicsDistribution *mechanics_distr = 0,
    const fbSkill::FB_SurvivalDistribution *survival_distr = 0,
    const fbSkill::FB_WeaponModdingDistribution *weapon_modding_distr = 0,
    const fbSkill::FB_BarterDistribution *barter_distr = 0,
    const fbSkill::FB_LeadershipDistribution *leadership_distr = 0) {
  FB_SkillReferenceBuilder builder_(_fbb);
  builder_.add_leadership_distr(leadership_distr);
  builder_.add_barter_distr(barter_distr);
  builder_.add_weapon_modding_distr(weapon_modding_distr);
  builder_.add_survival_distr(survival_distr);
  builder_.add_mechanics_distr(mechanics_distr);
  builder_.add_weird_science_distr(weird_science_distr);
  builder_.add_sneaky_shit_distr(sneaky_shit_distr);
  builder_.add_first_aid_distr(first_aid_distr);
  builder_.add_explosives_distr(explosives_distr);
  builder_.add_animal_whisperer_disrt(animal_whisperer_disrt);
  builder_.add_sniper_distr(sniper_distr);
  builder_.add_small_arms_distr(small_arms_distr);
  builder_.add_melee_distr(melee_distr);
  builder_.add_brawling_distr(brawling_distr);
  builder_.add_big_guns_distr(big_guns_distr);
  builder_.add_automatic_distr(automatic_distr);
  builder_.add_point_skill_distr(point_skill_distr);
  builder_.add_max_skill_points(max_skill_points);
  builder_.add_min_skill_points(min_skill_points);
  builder_.add_max_skill_level(max_skill_level);
  builder_.add_min_skill_level(min_skill_level);
  return builder_.Finish();
}

inline const fbSkill::FB_SkillReference *GetFB_SkillReference(const void *buf) {
  return flatbuffers::GetRoot<fbSkill::FB_SkillReference>(buf);
}

inline const fbSkill::FB_SkillReference *GetSizePrefixedFB_SkillReference(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<fbSkill::FB_SkillReference>(buf);
}

inline const char *FB_SkillReferenceIdentifier() {
  return "SKLR";
}

inline bool FB_SkillReferenceBufferHasIdentifier(const void *buf) {
  return flatbuffers::BufferHasIdentifier(
      buf, FB_SkillReferenceIdentifier());
}

inline bool VerifyFB_SkillReferenceBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<fbSkill::FB_SkillReference>(FB_SkillReferenceIdentifier());
}

inline bool VerifySizePrefixedFB_SkillReferenceBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<fbSkill::FB_SkillReference>(FB_SkillReferenceIdentifier());
}

inline const char *FB_SkillReferenceExtension() {
  return "bundle";
}

inline void FinishFB_SkillReferenceBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<fbSkill::FB_SkillReference> root) {
  fbb.Finish(root, FB_SkillReferenceIdentifier());
}

inline void FinishSizePrefixedFB_SkillReferenceBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<fbSkill::FB_SkillReference> root) {
  fbb.FinishSizePrefixed(root, FB_SkillReferenceIdentifier());
}

}  // namespace fbSkill

#endif  // FLATBUFFERS_GENERATED_SKILLREFERENCEFB_FBSKILL_H_
